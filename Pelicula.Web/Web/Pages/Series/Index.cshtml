@page
@model Web.Pages.Series.IndexModel
@{
	ViewData["Title"] = "Series por Género";
}

<div class="container-fluid px-4 mt-4">
	<h1 class="h2 mb-4">Series por Género</h1>
	<a class="btn btn-info" asp-page="./Generos">
		<i class="fas fa-tags"> Ver Géneros</i>	
	</a>

	<form method="get" class="mb-4">
		<div class="row align-items-end">
			<div class="col-md-4">
				<label for="genero" class="form-label">Selecciona un género</label>
				<select name="Genero" id="genero" class="form-select" onchange="this.form.submit()">
					<option value="">-- Todos los géneros --</option>
					@foreach (var genero in Model.Generos)
					{
						var isSelected = genero.Id == Model.Genero;
						<option value="@genero.Id" selected="@isSelected">@genero.Nombre</option>
					}
				</select>
			</div>
		</div>
	</form>

	@if (Model.Series != null && Model.Series.Any())
	{
		<div class="row g-3">
			@foreach (var serie in Model.Series)
			{
				<div class="col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2">
					<div class="card h-100 shadow-sm">
						<div class="position-relative overflow-hidden">
							<img src="@serie.Imagen" alt="@serie.Titulo" class="card-img-top"
								style="height: 300px; object-fit: cover;" />
							<div class="position-absolute top-0 end-0 m-2">
								<span class="badge bg-warning text-dark"> @serie.Calificacion</span>
							</div>
						</div>
						<div class="card-bodyn d-flex flex-column">
							<h5 class="card-title text-truncate" title="@serie.Titulo">@serie.Titulo</h5>
							<p class="card-text text-muted small mb-2">@serie.FechaLanzamiento</p>
							<p class="card-text flex-grow-1" style="-webkit-line-clamp: 3; -webkit-box-orient: vertical; overflow: hidden; display: -webkit-box;">
								@serie.Descripcion
							</p>
							<div class="mt-auto pt-2">
								<div class="col-6">
									<button type="button"
											class="btn btn-outline-danger btn-sm w-100"
											onclick="agregarFavorito('@serie.Id')">
										Favoritos
									</button>
								</div>
								<a class="btn btn-primary btn-sm" asp-page="./Detalle" asp-route-id="@serie.Id">
									<i class="fas fa-info-circle">Ver Detalles</i>
								</a>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	}
	else
	{
		<div class="alert alert-info">
			<i class="fas fa-info-circle me-2">No hay series disponibles</i>
		</div>
	}
</div>

@section Scripts {
	<script>
		async function agregarFavorito(idSerie) {
			const Email = prompt("Ingresa tu correo:");
			if (!Email) {
				alert("Se requiere el email del usuario.");
				return;
			}

			const comentario = prompt("Comentario:") || "Sin comentario";

			const puntuacionInput = prompt("Puntuación (1-10):");
			const puntuacion = parseInt(puntuacionInput);
			if (isNaN(puntuacion) || puntuacion < 1 || puntuacion > 10) {
				alert("La puntuación debe ser un número entre 1 y 10.");
				return;
			}

			const fechaActual = new Date().toISOString(); 

			const data = {
				idUsuario: 'B51F713A-2325-4CBD-BB91-168939253EC7',
				email: Email,
				idPelicula: null,
				idSerie: parseInt(idSerie),
				comentario: comentario.trim(),
				puntuacion: puntuacion,
				fechaRegistro: fechaActual
			};

			console.log("ENVIANDO:", data);

			try {
				const response = await fetch("https://localhost:7053/api/favorito", {
					method: "POST",
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify(data)
				});

				const responseText = await response.text();
				console.log("STATUS:", response.status);
				console.log("RESPONSE TEXT:", responseText);

				if (response.status === 201) {
					alert("✅ Favorito agregado correctamente.");
				} else {
					alert("⚠️ Error al agregar favorito:\n" + responseText);
				}
			} catch (err) {
				console.error("NETWORK ERROR:", err);
				alert("❌ Error de red al intentar agregar favorito.");
			}
		}
	</script>
}
}